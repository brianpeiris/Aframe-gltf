THREE.GLTFLoader=function(){function e(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager}function r(){var e={};return{get:function(r){return e[r]},add:function(r,t){e[r]=t},remove:function(r){delete e[r]},removeAll:function(){e={}},update:function(r,t){r.updateMatrixWorld(),t.updateMatrixWorld(),t.matrixWorldInverse.getInverse(t.matrixWorld);for(var a in e){var n=e[a];n.update&&n.update(r,t)}}}}function t(e,r){var t={},a=e.material.uniforms;for(var n in a){var i=a[n];if(i.semantic){var s=i.node,o=e;s&&(o=r[s]),t[n]={semantic:i.semantic,sourceNode:o,targetNode:e,uniform:i}}}this.boundUniforms=t,this._m4=new THREE.Matrix4}function a(e){this.name=p.KHR_MATERIALS_COMMON,this.lights={};var r=e.extensions&&e.extensions[p.KHR_MATERIALS_COMMON]||{},t=r.lights||{};for(var a in t){var n,i=t[a],s=i[i.type],o=(new THREE.Color).fromArray(s.color);switch(i.type){case"directional":n=new THREE.DirectionalLight(o),n.position.set(0,0,1);break;case"point":n=new THREE.PointLight(o);break;case"spot":n=new THREE.SpotLight(o),n.position.set(0,0,1);break;case"ambient":n=new THREE.AmbientLight(o)}n&&(this.lights[a]=n)}}function n(e){this.name=p.KHR_BINARY_GLTF;var r=new DataView(e,0,h),t={magic:o(new Uint8Array(e.slice(0,4))),version:r.getUint32(4,!0),length:r.getUint32(8,!0),contentLength:r.getUint32(12,!0),contentFormat:r.getUint32(16,!0)};for(var a in f){var n=f[a];if(t[a]!==n)throw new Error('Unsupported glTF-Binary header: Expected "%s" to be "%s".',a,n)}var i=new Uint8Array(e,h,t.contentLength);this.header=t,this.content=o(i),this.body=e.slice(h+t.contentLength,t.length)}function i(e,r,t){if(!e)return Promise.resolve();var a,n=[];if("[object Array]"===Object.prototype.toString.call(e)){a=[];for(var i=e.length,s=0;s<i;s++){var o=r.call(t||this,e[s],s);o&&(n.push(o),o instanceof Promise?o.then(function(e,r){a[s]=r}.bind(this,c)):a[s]=o)}}else{a={};for(var c in e)if(e.hasOwnProperty(c)){var o=r.call(t||this,e[c],c);o&&(n.push(o),o instanceof Promise?o.then(function(e,r){a[e]=r}.bind(this,c)):a[c]=o)}}return Promise.all(n).then(function(){return a})}function s(e,r){return"string"!=typeof e||""===e?"":/^https?:\/\//i.test(e)?e:/^data:.*,.*$/i.test(e)?e:(r||"")+e}function o(e){for(var r="",t=0;t<e.length;t++)r+=String.fromCharCode(e[t]);return r}function c(e,r){var t={};for(var a in r.attributes){var n=r.attributes[a],i=r.parameters[n],s=i.type,o=i.semantic;t[a]={type:s,semantic:o}}var c=r.parameters,u=r.attributes,E={};for(var a in t){var n=u[a],d=c[n],o=d.semantic;o&&(E[a]=d)}for(var n in E){var i=E[n],o=i.semantic,p=new RegExp("\\b"+n+"\\b","g");switch(o){case"POSITION":e=e.replace(p,"position");break;case"NORMAL":e=e.replace(p,"normal");break;case"TEXCOORD_0":case"TEXCOORD0":case"TEXCOORD":e=e.replace(p,"uv");break;case"COLOR_0":case"COLOR0":case"COLOR":e=e.replace(p,"color");break;case"WEIGHT":e=e.replace(p,"skinWeight");break;case"JOINT":e=e.replace(p,"skinIndex")}}return e}function u(){return new THREE.MeshPhongMaterial({color:0,emissive:8947848,specular:0,shininess:0,transparent:!1,depthTest:!0,side:THREE.FrontSide})}function E(e){this.isDeferredShaderMaterial=!0,this.params=e}function d(e,t,a){this.json=e||{},this.extensions=t||{},this.options=a||{},this.cache=new r}e.prototype={constructor:e,load:function(e,r,t,a){var n=this,i=this.path&&"string"==typeof this.path?this.path:THREE.Loader.prototype.extractUrlBase(e),s=new THREE.FileLoader(n.manager);s.setResponseType("arraybuffer"),s.load(e,function(e){n.parse(e,r,i)},t,a)},setCrossOrigin:function(e){this.crossOrigin=e},setPath:function(e){this.path=e},parse:function(e,r,t){var i,s={},c=o(new Uint8Array(e,0,4));c===f.magic?(s[p.KHR_BINARY_GLTF]=new n(e),i=s[p.KHR_BINARY_GLTF].content):i=o(new Uint8Array(e));var u=JSON.parse(i);u.extensionsUsed&&u.extensionsUsed.indexOf(p.KHR_MATERIALS_COMMON)>=0&&(s[p.KHR_MATERIALS_COMMON]=new a(u)),console.time("GLTFLoader");var E=new d(u,s,{path:t||this.path,crossOrigin:this.crossOrigin});E.parse(function(e,t,a,n){console.timeEnd("GLTFLoader");var i={scene:e,scenes:t,cameras:a,animations:n};r(i)})}},e.Shaders=new r,t.prototype.update=function(e,r){var t=this.boundUniforms;for(var a in t){var n=t[a];switch(n.semantic){case"MODELVIEW":var i=n.uniform.value;i.multiplyMatrices(r.matrixWorldInverse,n.sourceNode.matrixWorld);break;case"MODELVIEWINVERSETRANSPOSE":var s=n.uniform.value;this._m4.multiplyMatrices(r.matrixWorldInverse,n.sourceNode.matrixWorld),s.getNormalMatrix(this._m4);break;case"PROJECTION":var i=n.uniform.value;i.copy(r.projectionMatrix);break;case"JOINTMATRIX":for(var o=n.uniform.value,c=0;c<o.length;c++)o[c].getInverse(n.sourceNode.matrixWorld).multiply(n.targetNode.skeleton.bones[c].matrixWorld).multiply(n.targetNode.skeleton.boneInverses[c]).multiply(n.targetNode.bindMatrix);break;default:console.warn("Unhandled shader semantic: "+n.semantic)}}},e.Animations={update:function(){console.warn("THREE.GLTFLoader.Animation has been deprecated. Use THREE.AnimationMixer instead.")}};var p={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_MATERIALS_COMMON:"KHR_materials_common"},l="binary_glTF",f={magic:"glTF",version:1,contentFormat:0},h=20;n.prototype.loadShader=function(e,r){var t=r[e.extensions[p.KHR_BINARY_GLTF].bufferView],a=new Uint8Array(t);return o(a)},n.prototype.loadTextureSourceUri=function(e,r){var t=e.extensions[p.KHR_BINARY_GLTF],a=r[t.bufferView],n=o(new Uint8Array(a));return"data:"+t.mimeType+";base64,"+btoa(n)};var m={FLOAT:5126,FLOAT_MAT3:35675,FLOAT_MAT4:35676,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,LINEAR:9729,REPEAT:10497,SAMPLER_2D:35678,TRIANGLES:4,LINES:1,UNSIGNED_BYTE:5121,UNSIGNED_SHORT:5123,VERTEX_SHADER:35633,FRAGMENT_SHADER:35632},v={5126:Number,35675:THREE.Matrix3,35676:THREE.Matrix4,35664:THREE.Vector2,35665:THREE.Vector3,35666:THREE.Vector4,35678:THREE.Texture},T={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},R={9728:THREE.NearestFilter,9729:THREE.LinearFilter,9984:THREE.NearestMipMapNearestFilter,9985:THREE.LinearMipMapNearestFilter,9986:THREE.NearestMipMapLinearFilter,9987:THREE.LinearMipMapLinearFilter},H={33071:THREE.ClampToEdgeWrapping,33648:THREE.MirroredRepeatWrapping,10497:THREE.RepeatWrapping},A={6406:THREE.AlphaFormat,6407:THREE.RGBFormat,6408:THREE.RGBAFormat,6409:THREE.LuminanceFormat,6410:THREE.LuminanceAlphaFormat},y={5121:THREE.UnsignedByteType,32819:THREE.UnsignedShort4444Type,32820:THREE.UnsignedShort5551Type,33635:THREE.UnsignedShort565Type},b={1028:THREE.BackSide,1029:THREE.FrontSide},w={512:THREE.NeverDepth,513:THREE.LessDepth,514:THREE.EqualDepth,515:THREE.LessEqualDepth,516:THREE.GreaterEqualDepth,517:THREE.NotEqualDepth,518:THREE.GreaterEqualDepth,519:THREE.AlwaysDepth},L={32774:THREE.AddEquation,32778:THREE.SubtractEquation,32779:THREE.ReverseSubtractEquation},M={0:THREE.ZeroFactor,1:THREE.OneFactor,768:THREE.SrcColorFactor,769:THREE.OneMinusSrcColorFactor,770:THREE.SrcAlphaFactor,771:THREE.OneMinusSrcAlphaFactor,772:THREE.DstAlphaFactor,773:THREE.OneMinusDstAlphaFactor,774:THREE.DstColorFactor,775:THREE.OneMinusDstColorFactor,776:THREE.SrcAlphaSaturateFactor},O={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},g={scale:"scale",translation:"position",rotation:"quaternion"},S={LINEAR:THREE.InterpolateLinear,STEP:THREE.InterpolateDiscrete},_={2884:"CULL_FACE",2929:"DEPTH_TEST",3042:"BLEND",3089:"SCISSOR_TEST",32823:"POLYGON_OFFSET_FILL",32926:"SAMPLE_ALPHA_TO_COVERAGE"};return E.prototype.create=function(){var e=THREE.UniformsUtils.clone(this.params.uniforms);for(var r in this.params.uniforms){var t=this.params.uniforms[r];t.value instanceof THREE.Texture&&(e[r].value=t.value,e[r].value.needsUpdate=!0),e[r].semantic=t.semantic,e[r].node=t.node}return this.params.uniforms=e,new THREE.RawShaderMaterial(this.params)},d.prototype._withDependencies=function(e){for(var r={},t=0;t<e.length;t++){var a=e[t],n="load"+a.charAt(0).toUpperCase()+a.slice(1),s=this.cache.get(a);if(void 0!==s)r[a]=s;else if(this[n]){var o=this[n]();this.cache.add(a,o),r[a]=o}}return i(r,function(e){return e})},d.prototype.parse=function(e){var r=this.json;this.cache.removeAll(),this._withDependencies(["scenes","cameras","animations"]).then(function(t){var a=t.scenes[r.scene],n=[];for(var i in t.scenes)n.push(t.scenes[i]);var s=[];for(var i in t.cameras){var o=t.cameras[i];s.push(o)}var c=[];for(var i in t.animations)c.push(t.animations[i]);e(a,n,s,c)})},d.prototype.loadShaders=function(){var e=this.json,r=this.extensions,t=this.options;return this._withDependencies(["bufferViews"]).then(function(a){return i(e.shaders,function(e){return e.extensions&&e.extensions[p.KHR_BINARY_GLTF]?r[p.KHR_BINARY_GLTF].loadShader(e,a.bufferViews):new Promise(function(r){var a=new THREE.FileLoader;a.setResponseType("text"),a.load(s(e.uri,t.path),function(e){r(e)})})})})},d.prototype.loadBuffers=function(){var e=this.json,r=this.extensions,t=this.options;return i(e.buffers,function(e,a){return a===l?r[p.KHR_BINARY_GLTF].body:"arraybuffer"===e.type||void 0===e.type?new Promise(function(r){var a=new THREE.FileLoader;a.setResponseType("arraybuffer"),a.load(s(e.uri,t.path),function(e){r(e)})}):void console.warn("THREE.GLTFLoader: "+e.type+" buffer type is not supported")})},d.prototype.loadBufferViews=function(){var e=this.json;return this._withDependencies(["buffers"]).then(function(r){return i(e.bufferViews,function(e){var t=r.buffers[e.buffer],a=void 0!==e.byteLength?e.byteLength:0;return t.slice(e.byteOffset,e.byteOffset+a)})})},d.prototype.loadAccessors=function(){var e=this.json;return this._withDependencies(["bufferViews"]).then(function(r){return i(e.accessors,function(e){var t=r.bufferViews[e.bufferView],a=O[e.type],n=T[e.componentType],i=n.BYTES_PER_ELEMENT,s=i*a;if(e.byteStride&&e.byteStride!==s){var o=new n(t),c=new THREE.InterleavedBuffer(o,e.byteStride/i);return new THREE.InterleavedBufferAttribute(c,a,e.byteOffset/i)}return o=new n(t,e.byteOffset,e.count*a),new THREE.BufferAttribute(o,a)})})},d.prototype.loadTextures=function(){var e=this.json,r=this.extensions,t=this.options;return this._withDependencies(["bufferViews"]).then(function(a){return i(e.textures,function(n){if(n.source)return new Promise(function(i){var o=e.images[n.source],c=o.uri;o.extensions&&o.extensions[p.KHR_BINARY_GLTF]&&(c=r[p.KHR_BINARY_GLTF].loadTextureSourceUri(o,a.bufferViews));var u=THREE.Loader.Handlers.get(c);null===u&&(u=new THREE.TextureLoader),u.setCrossOrigin(t.crossOrigin),u.load(s(c,t.path),function(r){if(r.flipY=!1,void 0!==n.name&&(r.name=n.name),r.format=void 0!==n.format?A[n.format]:THREE.RGBAFormat,void 0!==n.internalFormat&&r.format!==A[n.internalFormat]&&console.warn("THREE.GLTFLoader: Three.js doesn't support texture internalFormat which is different from texture format. internalFormat will be forced to be the same value as format."),r.type=void 0!==n.type?y[n.type]:THREE.UnsignedByteType,n.sampler){var t=e.samplers[n.sampler];r.magFilter=R[t.magFilter]||THREE.LinearFilter,r.minFilter=R[t.minFilter]||THREE.NearestMipMapLinearFilter,r.wrapS=H[t.wrapS]||THREE.RepeatWrapping,r.wrapT=H[t.wrapT]||THREE.RepeatWrapping}i(r)},void 0,function(){i()})})})})},d.prototype.loadMaterials=function(){var e=this.json;return this._withDependencies(["shaders","textures"]).then(function(r){return i(e.materials,function(t){var a,n,i={},s={};if(t.extensions&&t.extensions[p.KHR_MATERIALS_COMMON]&&(n=t.extensions[p.KHR_MATERIALS_COMMON]),n){var o=["ambient","emission","transparent","transparency","doubleSided"];switch(n.technique){case"BLINN":case"PHONG":a=THREE.MeshPhongMaterial,o.push("diffuse","specular","shininess");break;case"LAMBERT":a=THREE.MeshLambertMaterial,o.push("diffuse");break;case"CONSTANT":default:a=THREE.MeshBasicMaterial}o.forEach(function(e){void 0!==n.values[e]&&(i[e]=n.values[e])}),(n.doubleSided||i.doubleSided)&&(s.side=THREE.DoubleSide),(n.transparent||i.transparent)&&(s.transparent=!0,s.opacity=void 0!==i.transparency?i.transparency:1)}else if(void 0===t.technique)a=THREE.MeshPhongMaterial,Object.assign(i,t.values);else{a=E;var u=e.techniques[t.technique];s.uniforms={};var d=e.programs[u.program];if(d){s.fragmentShader=r.shaders[d.fragmentShader],s.fragmentShader||(console.warn("ERROR: Missing fragment shader definition:",d.fragmentShader),a=THREE.MeshPhongMaterial);var l=r.shaders[d.vertexShader];l||(console.warn("ERROR: Missing vertex shader definition:",d.vertexShader),a=THREE.MeshPhongMaterial),s.vertexShader=c(l,u);var f=u.uniforms;for(var h in f){var T=f[h],R=u.parameters[T],H=R.type;if(!v[H])throw new Error("Unknown shader uniform param type: "+H);var A,y=R.count;void 0!==t.values&&(A=t.values[T]);var O=new v[H],g=R.semantic,S=R.node;switch(H){case m.FLOAT:O=R.value,"transparency"==T&&(s.transparent=!0),void 0!==A&&(O=A);break;case m.FLOAT_VEC2:case m.FLOAT_VEC3:case m.FLOAT_VEC4:case m.FLOAT_MAT3:R&&R.value&&O.fromArray(R.value),A&&O.fromArray(A);break;case m.FLOAT_MAT2:console.warn("FLOAT_MAT2 is not a supported uniform type");break;case m.FLOAT_MAT4:if(y){O=new Array(y);for(var F=0;F<y;F++)O[F]=new v[H];if(R&&R.value){var x=R.value;O.fromArray(x)}A&&O.fromArray(A)}else{if(R&&R.value){var N=R.value;O.fromArray(N)}A&&O.fromArray(A)}break;case m.SAMPLER_2D:O=void 0!==A?r.textures[A]:void 0!==R.value?r.textures[R.value]:null}s.uniforms[h]={value:O,semantic:g,node:S}}for(var I=u.states||{},D=I.enable||[],C=I.functions||{},k=!1,B=!1,U=!1,G=0,P=D.length;G<P;G++){var j=D[G];switch(_[j]){case"CULL_FACE":k=!0;break;case"DEPTH_TEST":B=!0;break;case"BLEND":U=!0;break;case"SCISSOR_TEST":case"POLYGON_OFFSET_FILL":case"SAMPLE_ALPHA_TO_COVERAGE":break;default:throw new Error("Unknown technique.states.enable: "+j)}}k?s.side=void 0!==C.cullFace?b[C.cullFace]:THREE.FrontSide:s.side=THREE.DoubleSide,s.depthTest=B,s.depthFunc=void 0!==C.depthFunc?w[C.depthFunc]:THREE.LessDepth,s.depthWrite=void 0===C.depthMask||C.depthMask[0],s.blending=U?THREE.CustomBlending:THREE.NoBlending,s.transparent=U;var V=C.blendEquationSeparate;void 0!==V?(s.blendEquation=L[V[0]],s.blendEquationAlpha=L[V[1]]):(s.blendEquation=THREE.AddEquation,s.blendEquationAlpha=THREE.AddEquation);var K=C.blendFuncSeparate;void 0!==K?(s.blendSrc=M[K[0]],s.blendDst=M[K[1]],s.blendSrcAlpha=M[K[2]],s.blendDstAlpha=M[K[3]]):(s.blendSrc=THREE.OneFactor,s.blendDst=THREE.ZeroFactor,s.blendSrcAlpha=THREE.OneFactor,s.blendDstAlpha=THREE.ZeroFactor)}}Array.isArray(i.diffuse)?s.color=(new THREE.Color).fromArray(i.diffuse):"string"==typeof i.diffuse&&(s.map=r.textures[i.diffuse]),delete s.diffuse,"string"==typeof i.reflective&&(s.envMap=r.textures[i.reflective]),"string"==typeof i.bump&&(s.bumpMap=r.textures[i.bump]),Array.isArray(i.emission)?a===THREE.MeshBasicMaterial?s.color=(new THREE.Color).fromArray(i.emission):s.emissive=(new THREE.Color).fromArray(i.emission):"string"==typeof i.emission&&(a===THREE.MeshBasicMaterial?s.map=r.textures[i.emission]:s.emissiveMap=r.textures[i.emission]),Array.isArray(i.specular)?s.specular=(new THREE.Color).fromArray(i.specular):"string"==typeof i.specular&&(s.specularMap=r.textures[i.specular]),void 0!==i.shininess&&(s.shininess=i.shininess);var W=new a(s);return void 0!==t.name&&(W.name=t.name),W})})},d.prototype.loadMeshes=function(){var e=this.json;return this._withDependencies(["accessors","materials"]).then(function(r){return i(e.meshes,function(e){var t=new THREE.Object3D;void 0!==e.name&&(t.name=e.name),e.extras&&(t.userData=e.extras);var a=e.primitives||[];for(var n in a){var i=a[n];if(i.mode===m.TRIANGLES||void 0===i.mode){var s=new THREE.BufferGeometry,o=i.attributes;for(var c in o){var E=o[c];if(!E)return;var d=r.accessors[E];switch(c){case"POSITION":s.addAttribute("position",d);break;case"NORMAL":s.addAttribute("normal",d);break;case"TEXCOORD_0":case"TEXCOORD0":case"TEXCOORD":s.addAttribute("uv",d);break;case"COLOR_0":case"COLOR0":case"COLOR":s.addAttribute("color",d);break;case"WEIGHT":s.addAttribute("skinWeight",d);break;case"JOINT":s.addAttribute("skinIndex",d)}}i.indices&&s.setIndex(r.accessors[i.indices]);var p=void 0!==r.materials?r.materials[i.material]:u(),l=new THREE.Mesh(s,p);l.castShadow=!0,l.name="0"===n?t.name:t.name+n,i.extras&&(l.userData=i.extras),t.add(l)}else if(i.mode===m.LINES){var s=new THREE.BufferGeometry,o=i.attributes;for(var c in o){var E=o[c];if(!E)return;var d=r.accessors[E];switch(c){case"POSITION":s.addAttribute("position",d);break;case"COLOR_0":case"COLOR0":case"COLOR":s.addAttribute("color",d)}}var l,p=r.materials[i.material];i.indices?(s.setIndex(r.accessors[i.indices]),l=new THREE.LineSegments(s,p)):l=new THREE.Line(s,p),l.name="0"===n?t.name:t.name+n,i.extras&&(l.userData=i.extras),t.add(l)}else console.warn("Only triangular and line primitives are supported")}return t})})},d.prototype.loadCameras=function(){var e=this.json;return i(e.cameras,function(e){if("perspective"==e.type&&e.perspective){var r=e.perspective.yfov,t=void 0!==e.perspective.aspectRatio?e.perspective.aspectRatio:1,a=r*t,n=new THREE.PerspectiveCamera(THREE.Math.radToDeg(a),t,e.perspective.znear||1,e.perspective.zfar||2e6);return void 0!==e.name&&(n.name=e.name),e.extras&&(n.userData=e.extras),n}if("orthographic"==e.type&&e.orthographic){var n=new THREE.OrthographicCamera(window.innerWidth/-2,window.innerWidth/2,window.innerHeight/2,window.innerHeight/-2,e.orthographic.znear,e.orthographic.zfar);return void 0!==e.name&&(n.name=e.name),e.extras&&(n.userData=e.extras),n}})},d.prototype.loadSkins=function(){var e=this.json;return this._withDependencies(["accessors"]).then(function(r){return i(e.skins,function(e){var t=new THREE.Matrix4;void 0!==e.bindShapeMatrix&&t.fromArray(e.bindShapeMatrix);var a={bindShapeMatrix:t,jointNames:e.jointNames,inverseBindMatrices:r.accessors[e.inverseBindMatrices]};return a})})},d.prototype.loadAnimations=function(){var e=this.json;return this._withDependencies(["accessors","nodes"]).then(function(r){return i(e.animations,function(e,t){var a=[];for(var n in e.channels){var i=e.channels[n],s=e.samplers[i.sampler];if(s){var o=i.target,c=o.id,u=void 0!==e.parameters?e.parameters[s.input]:s.input,E=void 0!==e.parameters?e.parameters[s.output]:s.output,d=r.accessors[u],p=r.accessors[E],l=r.nodes[c];if(l){l.updateMatrix(),l.matrixAutoUpdate=!0;var f=g[o.path]===g.rotation?THREE.QuaternionKeyframeTrack:THREE.VectorKeyframeTrack,h=l.name?l.name:l.uuid,m=void 0!==s.interpolation?S[s.interpolation]:THREE.InterpolateLinear;a.push(new f(h+"."+g[o.path],THREE.AnimationUtils.arraySlice(d.array,0),THREE.AnimationUtils.arraySlice(p.array,0),m))}}}var c=void 0!==e.name?e.name:"animation_"+t;return new THREE.AnimationClip(c,(void 0),a)})})},d.prototype.loadNodes=function(){var e=this.json,r=this.extensions,t=this;return i(e.nodes,function(e){var r,t=new THREE.Matrix4;return e.jointName?(r=new THREE.Bone,r.name=void 0!==e.name?e.name:e.jointName,r.jointName=e.jointName):(r=new THREE.Object3D,void 0!==e.name&&(r.name=e.name)),e.extras&&(r.userData=e.extras),void 0!==e.matrix?(t.fromArray(e.matrix),r.applyMatrix(t)):(void 0!==e.translation&&r.position.fromArray(e.translation),void 0!==e.rotation&&r.quaternion.fromArray(e.rotation),void 0!==e.scale&&r.scale.fromArray(e.scale)),r}).then(function(a){return t._withDependencies(["meshes","skins","cameras"]).then(function(t){return i(a,function(n,i){var s=e.nodes[i];if(void 0!==s.meshes)for(var o in s.meshes){var c=s.meshes[o],u=t.meshes[c];if(void 0!==u)for(var E in u.children){var d,l=u.children[E],f=l.material,h=l.geometry,m=l.userData,v=l.name;switch(f.isDeferredShaderMaterial?f=d=f.create():d=f,l.type){case"LineSegments":l=new THREE.LineSegments(h,d);break;case"LineLoop":l=new THREE.LineLoop(h,d);break;case"Line":l=new THREE.Line(h,d);break;default:l=new THREE.Mesh(h,d)}l.castShadow=!0,l.userData=m,l.name=v;var T;if(s.skin&&(T=t.skins[s.skin]),T){var R=function(e){for(var r=Object.keys(a),t=0,n=r.length;t<n;t++){var i=a[r[t]];if(i.jointName===e)return i}return null},H=h,d=f;d.skinning=!0,l=new THREE.SkinnedMesh(H,d,(!1)),l.castShadow=!0,l.userData=m,l.name=v;for(var A=[],y=[],b=0,w=T.jointNames.length;b<w;b++){var L=T.jointNames[b],M=R(L);if(M){A.push(M);var O=T.inverseBindMatrices.array,g=(new THREE.Matrix4).fromArray(O,16*b);y.push(g)}else console.warn("WARNING: joint: '"+L+"' could not be found")}l.bind(new THREE.Skeleton(A,y,(!1)),T.bindShapeMatrix);var S=function(r,t,n){var i=r[n];if(void 0!==i)for(var s=0,o=i.length;s<o;s++){var c=i[s],u=a[c],E=e.nodes[c];void 0!==u&&u.isBone===!0&&void 0!==E&&(t.add(u),S(E,u,"children"))}};S(s,l,"skeletons")}n.add(l)}else console.warn("GLTFLoader: Couldn't find node \""+c+'".')}if(void 0!==s.camera){var _=t.cameras[s.camera];n.add(_)}if(s.extensions&&s.extensions[p.KHR_MATERIALS_COMMON]&&s.extensions[p.KHR_MATERIALS_COMMON].light){var F=r[p.KHR_MATERIALS_COMMON].lights,x=F[s.extensions[p.KHR_MATERIALS_COMMON].light];n.add(x)}return n})})})},d.prototype.loadScenes=function(){function r(e,t,n){var i=n[e];t.add(i);var s=a.nodes[e];if(s.children)for(var o=s.children,c=0,u=o.length;c<u;c++){var E=o[c];r(E,i,n)}}var a=this.json;return this._withDependencies(["nodes"]).then(function(n){return i(a.scenes,function(a){var i=new THREE.Scene;void 0!==a.name&&(i.name=a.name),a.extras&&(i.userData=a.extras);for(var s=a.nodes||[],o=0,c=s.length;o<c;o++){var u=s[o];r(u,i,n.nodes)}return i.traverse(function(r){if(r.material&&r.material.isRawShaderMaterial){var a=new t(r,n.nodes);e.Shaders.add(r.uuid,a)}}),i})})},e}();